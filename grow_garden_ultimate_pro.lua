-- ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
-- üå± GROW A GARDEN - ULTIMATE VERSION üå±  
-- ‚ú® ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡∏î‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏° UI ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏° + ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥ + ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏£‡∏±‡∏ô
-- üî• ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ú‡πà‡∏≤‡∏ô Delta Executor ‡πÅ‡∏•‡∏∞ Executors ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
-- üéØ ‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß: loadstring(game:HttpGet("URL"))()
-- ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

-- ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏°‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
if not game:IsLoaded() then
    game.Loaded:Wait()
end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì
-- ‚îÉ                          üé® ULTIMATE UI SYSTEM üé®                          ‚îÉ
-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì

local UltimateGUI = {}

-- ‡∏™‡∏µ‡∏ò‡∏µ‡∏°‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°
UltimateGUI.Colors = {
    Primary = Color3.fromRGB(74, 144, 226),
    Secondary = Color3.fromRGB(26, 188, 156), 
    Success = Color3.fromRGB(46, 204, 113),
    Warning = Color3.fromRGB(241, 196, 15),
    Danger = Color3.fromRGB(231, 76, 60),
    Dark = Color3.fromRGB(52, 73, 94),
    Light = Color3.fromRGB(236, 240, 241),
    Background = Color3.fromRGB(44, 62, 80),
    Surface = Color3.fromRGB(52, 73, 94),
    Border = Color3.fromRGB(149, 165, 166),
    Text = Color3.fromRGB(255, 255, 255),
    TextMuted = Color3.fromRGB(189, 195, 199)
}

-- ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏•‡∏±‡∏Å
UltimateGUI.Settings = {
    -- ‡∏ü‡∏≤‡∏£‡πå‡∏°
    AutoPlant = false,
    AutoHarvest = false, 
    AutoSell = false,
    AutoWater = false,
    
    -- ‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á
    AutoBuySeeds = false,
    AutoBuyEggs = false,
    AutoBuyShops = false,
    AutoBuyTools = false,
    
    -- ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    SelectedSeed = "Carrot",
    SelectedEgg = "Common Egg",
    BuyAmount = 1,
    
    -- ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û
    FarmSpeed = 1.0,
    ScanInterval = 30,
    BuyInterval = 15,
    
    -- ‡∏£‡∏∞‡∏ö‡∏ö
    AntiAFK = true,
    AutoReconnect = true,
    SmartDetection = true,
    ShowNotifications = true,
    
    -- UI
    UIScale = 1.0,
    Theme = "Dark"
}

-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°
UltimateGUI.GameData = {
    RemoteEvents = {},
    Seeds = {},
    Eggs = {},
    Shops = {},
    Tools = {},
    Plants = {},
    NPCs = {},
    PlayerStats = {
        Money = 0,
        Level = 1,
        Pets = 0,
        PlantCount = 0
    },
    LastScan = 0,
    LastBuy = 0,
    LastFarm = 0,
    Connections = {}
}

-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì
-- ‚îÉ                       üîç ADVANCED DETECTION SYSTEM üîç                      ‚îÉ
-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì

function UltimateGUI:ScanRemoteEvents()
    local events = {}
    
    local function scanContainer(container, path)
        for _, child in pairs(container:GetChildren()) do
            if child:IsA("RemoteEvent") or child:IsA("RemoteFunction") then
                local name = child.Name:lower()
                
                -- ‡∏à‡∏±‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
                local category = "unknown"
                if name:find("buy") or name:find("purchase") or name:find("shop") then
                    category = "buy"
                elseif name:find("plant") or name:find("seed") then
                    category = "plant"
                elseif name:find("harvest") or name:find("collect") then
                    category = "harvest"
                elseif name:find("sell") or name:find("trade") then
                    category = "sell"
                elseif name:find("water") then
                    category = "water"
                elseif name:find("pet") or name:find("egg") then
                    category = "pet"
                end
                
                events[child.Name] = {
                    Event = child,
                    Path = path .. "/" .. child.Name,
                    Category = category,
                    Type = child.ClassName
                }
            elseif child:IsA("Folder") then
                scanContainer(child, path .. "/" .. child.Name)
            end
        end
    end
    
    scanContainer(ReplicatedStorage, "ReplicatedStorage")
    self.GameData.RemoteEvents = events
    
    print("üîç ‡∏™‡πÅ‡∏Å‡∏ô RemoteEvents:", self:CountTable(events), "‡∏ï‡∏±‡∏ß")
end

function UltimateGUI:ScanGameItems()
    -- ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    self.GameData.Seeds = {}
    self.GameData.Eggs = {}
    self.GameData.Shops = {}
    self.GameData.Tools = {}
    self.GameData.Plants = {}
    self.GameData.NPCs = {}
    
    -- ‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏ß‡∏¥‡∏£‡πå‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö
    local seedWords = {"carrot", "tomato", "potato", "corn", "wheat", "seed", "‡πÄ‡∏°‡∏•‡πá‡∏î"}
    local eggWords = {"egg", "common", "rare", "epic", "legendary", "‡πÑ‡∏Ç‡πà"}
    local shopWords = {"shop", "store", "market", "‡∏£‡πâ‡∏≤‡∏ô", "‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤"}
    local toolWords = {"tool", "water", "shovel", "hoe", "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠"}
    
    local function scanWorkspace(container, depth)
        if depth > 5 then return end
        
        for _, obj in pairs(container:GetChildren()) do
            local name = obj.Name:lower()
            
            -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå
            for _, word in pairs(seedWords) do
                if name:find(word) then
                    table.insert(self.GameData.Seeds, {
                        Name = obj.Name,
                        Object = obj,
                        Position = self:GetPosition(obj)
                    })
                    break
                end
            end
            
            -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏Ç‡πà
            for _, word in pairs(eggWords) do
                if name:find(word) then
                    table.insert(self.GameData.Eggs, {
                        Name = obj.Name,
                        Object = obj,
                        Position = self:GetPosition(obj)
                    })
                    break
                end
            end
            
            -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤
            for _, word in pairs(shopWords) do
                if name:find(word) then
                    table.insert(self.GameData.Shops, {
                        Name = obj.Name,
                        Object = obj,
                        Position = self:GetPosition(obj)
                    })
                    break
                end
            end
            
            -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠
            for _, word in pairs(toolWords) do
                if name:find(word) then
                    table.insert(self.GameData.Tools, {
                        Name = obj.Name,
                        Object = obj,
                        Position = self:GetPosition(obj)
                    })
                    break
                end
            end
            
            -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏û‡∏∑‡∏ä
            if name:find("plant") or name:find("crop") then
                local isGrown = name:find("grown") or name:find("ready") or name:find("mature")
                table.insert(self.GameData.Plants, {
                    Name = obj.Name,
                    Object = obj,
                    Position = self:GetPosition(obj),
                    IsGrown = isGrown
                })
            end
            
            -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö NPCs
            if obj:IsA("Model") and obj:FindFirstChild("Humanoid") then
                table.insert(self.GameData.NPCs, {
                    Name = obj.Name,
                    Object = obj,
                    Position = self:GetPosition(obj)
                })
            end
            
            -- ‡∏™‡πÅ‡∏Å‡∏ô‡∏•‡∏π‡∏Å‡πÜ
            if obj:IsA("Folder") or obj:IsA("Model") then
                scanWorkspace(obj, depth + 1)
            end
        end
    end
    
    scanWorkspace(Workspace, 0)
    
    print("üìä ‡∏™‡πÅ‡∏Å‡∏ô‡πÑ‡∏≠‡πÄ‡∏ó‡∏° - ‡πÄ‡∏°‡∏•‡πá‡∏î:", #self.GameData.Seeds, "‡πÑ‡∏Ç‡πà:", #self.GameData.Eggs, "‡∏£‡πâ‡∏≤‡∏ô:", #self.GameData.Shops)
end

function UltimateGUI:GetPosition(obj)
    if obj:IsA("BasePart") then
        return obj.Position
    elseif obj:IsA("Model") then
        local root = obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChild("PrimaryPart") or obj.PrimaryPart
        return root and root.Position or Vector3.new(0, 0, 0)
    end
    return Vector3.new(0, 0, 0)
end

function UltimateGUI:CountTable(tbl)
    local count = 0
    for _ in pairs(tbl) do count = count + 1 end
    return count
end

-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì
-- ‚îÉ                        üí∞ SMART BUYING SYSTEM üí∞                           ‚îÉ
-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì

function UltimateGUI:GetPlayerMoney()
    local money = 0
    local paths = {
        LocalPlayer:FindFirstChild("leaderstats"),
        LocalPlayer:FindFirstChild("PlayerStats"),
        LocalPlayer:FindFirstChild("Data"),
        LocalPlayer:FindFirstChild("Stats")
    }
    
    for _, path in pairs(paths) do
        if path then
            local moneyVal = path:FindFirstChild("Money") or path:FindFirstChild("Cash") or path:FindFirstChild("Coins")
            if moneyVal and moneyVal.Value then
                money = moneyVal.Value
                break
            end
        end
    end
    
    self.GameData.PlayerStats.Money = money
    return money
end

function UltimateGUI:SafeBuy(itemName, itemType, amount)
    if not itemName or amount <= 0 then return false end
    
    -- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏¥‡∏ô
    local money = self:GetPlayerMoney()
    if money <= 0 then
        self:ShowNotification("‚ùå ‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏û‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠", self.Colors.Danger)
        return false
    end
    
    -- ‡∏´‡∏≤ RemoteEvent ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
    local buyEvents = {}
    for _, data in pairs(self.GameData.RemoteEvents) do
        if data.Category == "buy" then
            table.insert(buyEvents, data)
        end
    end
    
    -- ‡∏•‡∏≠‡∏á‡∏ã‡∏∑‡πâ‡∏≠
    for _, eventData in pairs(buyEvents) do
        local attempts = {
            function()
                eventData.Event:FireServer(itemName, amount)
            end,
            function()
                eventData.Event:FireServer({Item = itemName, Amount = amount})
            end,
            function()
                eventData.Event:FireServer("Buy", itemName, amount)
            end,
            function()
                eventData.Event:FireServer(itemType, itemName, amount)
            end
        }
        
        for _, attempt in pairs(attempts) do
            local success = pcall(attempt)
            if success then
                self:ShowNotification("‚úÖ ‡∏ã‡∏∑‡πâ‡∏≠ " .. itemName .. " ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", self.Colors.Success)
                return true
            end
        end
    end
    
    self:ShowNotification("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ã‡∏∑‡πâ‡∏≠ " .. itemName .. " ‡πÑ‡∏î‡πâ", self.Colors.Danger)
    return false
end

-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì
-- ‚îÉ                         üå± AUTO FARMING SYSTEM üå±                          ‚îÉ
-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì

function UltimateGUI:TeleportTo(position)
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(position + Vector3.new(0, 5, 0))
        wait(0.1)
        return true
    end
    return false
end

function UltimateGUI:AutoPlant()
    if not self.Settings.AutoPlant then return end
    
    -- ‡∏´‡∏≤‡πÅ‡∏õ‡∏•‡∏á‡∏õ‡∏•‡∏π‡∏Å
    local plots = {}
    for _, obj in pairs(Workspace:GetChildren()) do
        local name = obj.Name:lower()
        if (name:find("plot") or name:find("soil") or name:find("‡πÅ‡∏õ‡∏•‡∏á")) and obj:IsA("BasePart") then
            table.insert(plots, obj)
        end
    end
    
    -- ‡∏õ‡∏•‡∏π‡∏Å‡πÉ‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏£‡∏Å
    for _, plot in pairs(plots) do
        self:TeleportTo(plot.Position)
        
        -- ‡∏•‡∏≠‡∏á‡∏õ‡∏•‡∏π‡∏Å
        for _, eventData in pairs(self.GameData.RemoteEvents) do
            if eventData.Category == "plant" then
                pcall(function()
                    eventData.Event:FireServer(self.Settings.SelectedSeed)
                end)
                pcall(function()
                    eventData.Event:FireServer("Plant", self.Settings.SelectedSeed)
                end)
            end
        end
        wait(0.2)
        break
    end
end

function UltimateGUI:AutoHarvest()
    if not self.Settings.AutoHarvest then return end
    
    -- ‡∏´‡∏≤‡∏û‡∏∑‡∏ä‡∏ó‡∏µ‡πà‡πÇ‡∏ï‡πÅ‡∏•‡πâ‡∏ß
    for _, plantData in pairs(self.GameData.Plants) do
        if plantData.IsGrown and plantData.Position then
            self:TeleportTo(plantData.Position)
            
            -- ‡∏•‡∏≠‡∏á‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß
            for _, eventData in pairs(self.GameData.RemoteEvents) do
                if eventData.Category == "harvest" then
                    pcall(function()
                        eventData.Event:FireServer(plantData.Object)
                    end)
                    pcall(function()
                        eventData.Event:FireServer("Harvest")
                    end)
                end
            end
            wait(0.2)
        end
    end
end

function UltimateGUI:AutoSell()
    if not self.Settings.AutoSell then return end
    
    -- ‡∏´‡∏≤‡∏à‡∏∏‡∏î‡∏Ç‡∏≤‡∏¢
    for _, shopData in pairs(self.GameData.Shops) do
        if shopData.Position then
            self:TeleportTo(shopData.Position)
            
            -- ‡∏•‡∏≠‡∏á‡∏Ç‡∏≤‡∏¢
            for _, eventData in pairs(self.GameData.RemoteEvents) do
                if eventData.Category == "sell" then
                    pcall(function()
                        eventData.Event:FireServer()
                    end)
                    pcall(function()
                        eventData.Event:FireServer("SellAll")
                    end)
                end
            end
            wait(0.2)
            break
        end
    end
end

-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì
-- ‚îÉ                         üé® ULTIMATE UI CREATION üé®                         ‚îÉ
-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì

function UltimateGUI:CreateMainGUI()
    -- ‡∏•‡∏ö GUI ‡πÄ‡∏Å‡πà‡∏≤
    if PlayerGui:FindFirstChild("GrowGardenUltimate") then
        PlayerGui.GrowGardenUltimate:Destroy()
    end
    
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "GrowGardenUltimate"
    ScreenGui.Parent = PlayerGui
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.ResetOnSpawn = false
    
    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.BackgroundColor3 = self.Colors.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.Position = UDim2.new(0.5, -300, 0.5, -250)
    MainFrame.Size = UDim2.new(0, 600, 0, 500)
    MainFrame.Active = true
    MainFrame.Draggable = true
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 15)
    Corner.Parent = MainFrame
    
    local Stroke = Instance.new("UIStroke")
    Stroke.Color = self.Colors.Primary
    Stroke.Thickness = 2
    Stroke.Parent = MainFrame
    
    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Parent = MainFrame
    TitleBar.BackgroundColor3 = self.Colors.Primary
    TitleBar.BorderSizePixel = 0
    TitleBar.Size = UDim2.new(1, 0, 0, 50)
    
    local TitleCorner = Instance.new("UICorner")
    TitleCorner.CornerRadius = UDim.new(0, 15)
    TitleCorner.Parent = TitleBar
    
    local Title = Instance.new("TextLabel")
    Title.Parent = TitleBar
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0, 60, 0, 0)
    Title.Size = UDim2.new(1, -120, 1, 0)
    Title.Font = Enum.Font.GothamBold
    Title.Text = "üå± Grow Garden Ultimate Script üå±"
    Title.TextColor3 = self.Colors.Light
    Title.TextScaled = true
    
    local Icon = Instance.new("TextLabel")
    Icon.Parent = TitleBar
    Icon.BackgroundTransparency = 1
    Icon.Position = UDim2.new(0, 10, 0, 0)
    Icon.Size = UDim2.new(0, 40, 1, 0)
    Icon.Font = Enum.Font.GothamBold
    Icon.Text = "üå±"
    Icon.TextColor3 = self.Colors.Light
    Icon.TextScaled = true
    
    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Parent = TitleBar
    CloseButton.BackgroundColor3 = self.Colors.Danger
    CloseButton.BorderSizePixel = 0
    CloseButton.Position = UDim2.new(1, -45, 0, 5)
    CloseButton.Size = UDim2.new(0, 40, 0, 40)
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.Text = "‚úï"
    CloseButton.TextColor3 = self.Colors.Light
    CloseButton.TextScaled = true
    
    local CloseCorner = Instance.new("UICorner")
    CloseCorner.CornerRadius = UDim.new(0, 10)
    CloseCorner.Parent = CloseButton
    
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)
    
    -- Content Frame
    local ContentFrame = Instance.new("Frame")
    ContentFrame.Name = "ContentFrame"
    ContentFrame.Parent = MainFrame
    ContentFrame.BackgroundTransparency = 1
    ContentFrame.Position = UDim2.new(0, 0, 0, 60)
    ContentFrame.Size = UDim2.new(1, 0, 1, -70)
    
    -- Tab System
    self:CreateTabSystem(ContentFrame)
    
    return ScreenGui
end

function UltimateGUI:CreateTabSystem(parent)
    local TabFrame = Instance.new("Frame")
    TabFrame.Name = "TabFrame"
    TabFrame.Parent = parent
    TabFrame.BackgroundTransparency = 1
    TabFrame.Size = UDim2.new(1, 0, 0, 40)
    
    local TabList = Instance.new("UIListLayout")
    TabList.Parent = TabFrame
    TabList.FillDirection = Enum.FillDirection.Horizontal
    TabList.HorizontalAlignment = Enum.HorizontalAlignment.Center
    TabList.Padding = UDim.new(0, 10)
    
    local ContentFrame = Instance.new("Frame")
    ContentFrame.Name = "ContentFrame"
    ContentFrame.Parent = parent
    ContentFrame.BackgroundTransparency = 1
    ContentFrame.Position = UDim2.new(0, 0, 0, 50)
    ContentFrame.Size = UDim2.new(1, 0, 1, -50)
    
    local tabs = {
        {Name = "üå± ‡∏ü‡∏≤‡∏£‡πå‡∏°", Key = "Farm", Color = self.Colors.Success},
        {Name = "üõí ‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á", Key = "Buy", Color = self.Colors.Primary},
        {Name = "‚öôÔ∏è ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤", Key = "Settings", Color = self.Colors.Warning},
        {Name = "üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥", Key = "Stats", Color = self.Colors.Secondary}
    }
    
    local currentTab = nil
    
    for i, tabData in pairs(tabs) do
        -- Tab Button
        local TabButton = Instance.new("TextButton")
        TabButton.Name = tabData.Key .. "Tab"
        TabButton.Parent = TabFrame
        TabButton.BackgroundColor3 = tabData.Color
        TabButton.BorderSizePixel = 0
        TabButton.Size = UDim2.new(0, 130, 1, 0)
        TabButton.Font = Enum.Font.GothamBold
        TabButton.Text = tabData.Name
        TabButton.TextColor3 = self.Colors.Light
        TabButton.TextSize = 14
        
        local TabCorner = Instance.new("UICorner")
        TabCorner.CornerRadius = UDim.new(0, 10)
        TabCorner.Parent = TabButton
        
        -- Tab Content
        local TabContent = Instance.new("ScrollingFrame")
        TabContent.Name = tabData.Key .. "Content"
        TabContent.Parent = ContentFrame
        TabContent.BackgroundColor3 = self.Colors.Surface
        TabContent.BorderSizePixel = 0
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.CanvasSize = UDim2.new(0, 0, 2, 0)
        TabContent.ScrollBarThickness = 8
        TabContent.Visible = (i == 1)
        
        local ContentCorner = Instance.new("UICorner")
        ContentCorner.CornerRadius = UDim.new(0, 10)
        ContentCorner.Parent = TabContent
        
        local ContentPadding = Instance.new("UIPadding")
        ContentPadding.PaddingTop = UDim.new(0, 15)
        ContentPadding.PaddingLeft = UDim.new(0, 15)
        ContentPadding.PaddingRight = UDim.new(0, 15)
        ContentPadding.PaddingBottom = UDim.new(0, 15)
        ContentPadding.Parent = TabContent
        
        local ContentLayout = Instance.new("UIListLayout")
        ContentLayout.Parent = TabContent
        ContentLayout.Padding = UDim.new(0, 10)
        ContentLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
        
        -- Tab Events
        TabButton.MouseButton1Click:Connect(function()
            -- Hide all tabs
            for _, child in pairs(ContentFrame:GetChildren()) do
                if child:IsA("ScrollingFrame") then
                    child.Visible = false
                end
            end
            
            -- Reset all button colors
            for _, button in pairs(TabFrame:GetChildren()) do
                if button:IsA("TextButton") then
                    TweenService:Create(button, TweenInfo.new(0.3), {BackgroundColor3 = self.Colors.Dark}):Play()
                end
            end
            
            -- Show selected tab
            TabContent.Visible = true
            TweenService:Create(TabButton, TweenInfo.new(0.3), {BackgroundColor3 = tabData.Color}):Play()
            currentTab = tabData.Key
        end)
        
        -- Create tab content
        if tabData.Key == "Farm" then
            self:CreateFarmTab(TabContent)
        elseif tabData.Key == "Buy" then
            self:CreateBuyTab(TabContent)
        elseif tabData.Key == "Settings" then
            self:CreateSettingsTab(TabContent)
        elseif tabData.Key == "Stats" then
            self:CreateStatsTab(TabContent)
        end
    end
end

function UltimateGUI:CreateToggle(parent, text, default, callback)
    local ToggleFrame = Instance.new("Frame")
    ToggleFrame.Parent = parent
    ToggleFrame.BackgroundColor3 = self.Colors.Dark
    ToggleFrame.BorderSizePixel = 0
    ToggleFrame.Size = UDim2.new(1, 0, 0, 50)
    
    local ToggleCorner = Instance.new("UICorner")
    ToggleCorner.CornerRadius = UDim.new(0, 10)
    ToggleCorner.Parent = ToggleFrame
    
    local Label = Instance.new("TextLabel")
    Label.Parent = ToggleFrame
    Label.BackgroundTransparency = 1
    Label.Position = UDim2.new(0, 15, 0, 0)
    Label.Size = UDim2.new(1, -80, 1, 0)
    Label.Font = Enum.Font.Gotham
    Label.Text = text
    Label.TextColor3 = self.Colors.Text
    Label.TextSize = 16
    Label.TextXAlignment = Enum.TextXAlignment.Left
    
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Parent = ToggleFrame
    ToggleButton.BackgroundColor3 = default and self.Colors.Success or self.Colors.Danger
    ToggleButton.BorderSizePixel = 0
    ToggleButton.Position = UDim2.new(1, -60, 0, 10)
    ToggleButton.Size = UDim2.new(0, 50, 0, 30)
    ToggleButton.Text = default and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
    ToggleButton.Font = Enum.Font.GothamBold
    ToggleButton.TextColor3 = self.Colors.Light
    ToggleButton.TextSize = 12
    
    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.CornerRadius = UDim.new(0, 8)
    ButtonCorner.Parent = ToggleButton
    
    local isToggled = default
    
    ToggleButton.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        
        local newColor = isToggled and self.Colors.Success or self.Colors.Danger
        local newText = isToggled and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"
        
        TweenService:Create(ToggleButton, TweenInfo.new(0.3), {BackgroundColor3 = newColor}):Play()
        ToggleButton.Text = newText
        
        callback(isToggled)
    end)
    
    return ToggleFrame
end

function UltimateGUI:CreateButton(parent, text, color, callback)
    local Button = Instance.new("TextButton")
    Button.Parent = parent
    Button.BackgroundColor3 = color or self.Colors.Primary
    Button.BorderSizePixel = 0
    Button.Size = UDim2.new(1, 0, 0, 45)
    Button.Font = Enum.Font.GothamBold
    Button.Text = text
    Button.TextColor3 = self.Colors.Light
    Button.TextSize = 16
    
    local Corner = Instance.new("UICorner")
    Corner.CornerRadius = UDim.new(0, 10)
    Corner.Parent = Button
    
    Button.MouseButton1Click:Connect(callback)
    
    -- Hover effects
    Button.MouseEnter:Connect(function()
        TweenService:Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = self.Colors.Secondary}):Play()
    end)
    
    Button.MouseLeave:Connect(function()
        TweenService:Create(Button, TweenInfo.new(0.2), {BackgroundColor3 = color or self.Colors.Primary}):Play()
    end)
    
    return Button
end

function UltimateGUI:CreateFarmTab(parent)
    self:CreateToggle(parent, "üå± ‡∏õ‡∏•‡∏π‡∏Å‡∏û‡∏∑‡∏ä‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", self.Settings.AutoPlant, function(value)
        self.Settings.AutoPlant = value
        self:ShowNotification("üå± ‡∏õ‡∏•‡∏π‡∏Å‡∏û‡∏∑‡∏ä‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: " .. (value and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"), self.Colors.Success)
    end)
    
    self:CreateToggle(parent, "üåæ ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", self.Settings.AutoHarvest, function(value)
        self.Settings.AutoHarvest = value
        self:ShowNotification("üåæ ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: " .. (value and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"), self.Colors.Success)
    end)
    
    self:CreateToggle(parent, "üí∞ ‡∏Ç‡∏≤‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", self.Settings.AutoSell, function(value)
        self.Settings.AutoSell = value
        self:ShowNotification("üí∞ ‡∏Ç‡∏≤‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: " .. (value and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"), self.Colors.Success)
    end)
    
    self:CreateToggle(parent, "üíß ‡∏£‡∏î‡∏ô‡πâ‡∏≥‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", self.Settings.AutoWater, function(value)
        self.Settings.AutoWater = value
        self:ShowNotification("üíß ‡∏£‡∏î‡∏ô‡πâ‡∏≥‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: " .. (value and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"), self.Colors.Success)
    end)
    
    self:CreateButton(parent, "üåü ‡πÄ‡∏õ‡∏¥‡∏î‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", self.Colors.Success, function()
        self.Settings.AutoPlant = true
        self.Settings.AutoHarvest = true
        self.Settings.AutoSell = true
        self.Settings.AutoWater = true
        self:ShowNotification("üåü ‡πÄ‡∏õ‡∏¥‡∏î‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß!", self.Colors.Success)
    end)
    
    self:CreateButton(parent, "üõë ‡∏õ‡∏¥‡∏î‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", self.Colors.Danger, function()
        self.Settings.AutoPlant = false
        self.Settings.AutoHarvest = false
        self.Settings.AutoSell = false
        self.Settings.AutoWater = false
        self:ShowNotification("üõë ‡∏õ‡∏¥‡∏î‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß!", self.Colors.Danger)
    end)
end

function UltimateGUI:CreateBuyTab(parent)
    self:CreateToggle(parent, "üå± ‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", self.Settings.AutoBuySeeds, function(value)
        self.Settings.AutoBuySeeds = value
        self:ShowNotification("üå± ‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: " .. (value and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"), self.Colors.Success)
    end)
    
    self:CreateToggle(parent, "ü•ö ‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏Ç‡πà‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", self.Settings.AutoBuyEggs, function(value)
        self.Settings.AutoBuyEggs = value
        self:ShowNotification("ü•ö ‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏Ç‡πà‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: " .. (value and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"), self.Colors.Success)
    end)
    
    self:CreateToggle(parent, "üè™ ‡∏ã‡∏∑‡πâ‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", self.Settings.AutoBuyShops, function(value)
        self.Settings.AutoBuyShops = value
        self:ShowNotification("üè™ ‡∏ã‡∏∑‡πâ‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: " .. (value and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"), self.Colors.Success)
    end)
    
    self:CreateToggle(parent, "üîß ‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", self.Settings.AutoBuyTools, function(value)
        self.Settings.AutoBuyTools = value
        self:ShowNotification("üîß ‡∏ã‡∏∑‡πâ‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: " .. (value and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"), self.Colors.Success)
    end)
    
    self:CreateButton(parent, "üõí ‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ", self.Colors.Primary, function()
        if self.Settings.AutoBuySeeds and #self.GameData.Seeds > 0 then
            self:SafeBuy(self.GameData.Seeds[1].Name, "Seed", self.Settings.BuyAmount)
        end
        if self.Settings.AutoBuyEggs and #self.GameData.Eggs > 0 then
            self:SafeBuy(self.GameData.Eggs[1].Name, "Egg", self.Settings.BuyAmount)
        end
        self:ShowNotification("üõí ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏ã‡∏∑‡πâ‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß!", self.Colors.Primary)
    end)
    
    self:CreateButton(parent, "üîç ‡∏™‡πÅ‡∏Å‡∏ô‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏´‡∏°‡πà", self.Colors.Secondary, function()
        self:FullScan()
        self:ShowNotification("üîç ‡∏™‡πÅ‡∏Å‡∏ô‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!", self.Colors.Secondary)
    end)
end

function UltimateGUI:CreateSettingsTab(parent)
    self:CreateToggle(parent, "üö´ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô AFK", self.Settings.AntiAFK, function(value)
        self.Settings.AntiAFK = value
        self:ShowNotification("üö´ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô AFK: " .. (value and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"), self.Colors.Success)
    end)
    
    self:CreateToggle(parent, "üîÑ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", self.Settings.AutoReconnect, function(value)
        self.Settings.AutoReconnect = value
        if value then
            self:SetupAutoReconnect()
        end
        self:ShowNotification("üîÑ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: " .. (value and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"), self.Colors.Success)
    end)
    
    self:CreateToggle(parent, "üîî ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", self.Settings.ShowNotifications, function(value)
        self.Settings.ShowNotifications = value
    end)
    
    self:CreateToggle(parent, "üß† ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞", self.Settings.SmartDetection, function(value)
        self.Settings.SmartDetection = value
        self:ShowNotification("üß† ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞: " .. (value and "‡πÄ‡∏õ‡∏¥‡∏î" or "‡∏õ‡∏¥‡∏î"), self.Colors.Success)
    end)
    
    self:CreateButton(parent, "üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤", self.Colors.Warning, function()
        self:ResetSettings()
        self:ShowNotification("üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!", self.Colors.Warning)
    end)
end

function UltimateGUI:CreateStatsTab(parent)
    local statsData = {
        {Icon = "üí∞", Text = "‡πÄ‡∏á‡∏¥‡∏ô", Value = function() return self:GetPlayerMoney() end},
        {Icon = "‚≠ê", Text = "‡∏£‡∏∞‡∏î‡∏±‡∏ö", Value = function() return self.GameData.PlayerStats.Level end},
        {Icon = "üå±", Text = "‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏ö", Value = function() return #self.GameData.Seeds end},
        {Icon = "ü•ö", Text = "‡πÑ‡∏Ç‡πà‡∏û‡∏ö", Value = function() return #self.GameData.Eggs end},
        {Icon = "üè™", Text = "‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏û‡∏ö", Value = function() return #self.GameData.Shops end},
        {Icon = "üåø", Text = "‡∏û‡∏∑‡∏ä‡∏û‡∏ö", Value = function() return #self.GameData.Plants end},
        {Icon = "üîå", Text = "RemoteEvents", Value = function() return self:CountTable(self.GameData.RemoteEvents) end}
    }
    
    for _, stat in pairs(statsData) do
        local StatFrame = Instance.new("Frame")
        StatFrame.Parent = parent
        StatFrame.BackgroundColor3 = self.Colors.Dark
        StatFrame.BorderSizePixel = 0
        StatFrame.Size = UDim2.new(1, 0, 0, 60)
        
        local StatCorner = Instance.new("UICorner")
        StatCorner.CornerRadius = UDim.new(0, 10)
        StatCorner.Parent = StatFrame
        
        local IconLabel = Instance.new("TextLabel")
        IconLabel.Parent = StatFrame
        IconLabel.BackgroundTransparency = 1
        IconLabel.Position = UDim2.new(0, 15, 0, 0)
        IconLabel.Size = UDim2.new(0, 50, 1, 0)
        IconLabel.Font = Enum.Font.GothamBold
        IconLabel.Text = stat.Icon
        IconLabel.TextColor3 = self.Colors.Primary
        IconLabel.TextScaled = true
        
        local NameLabel = Instance.new("TextLabel")
        NameLabel.Parent = StatFrame
        NameLabel.BackgroundTransparency = 1
        NameLabel.Position = UDim2.new(0, 75, 0, 0)
        NameLabel.Size = UDim2.new(0.5, 0, 1, 0)
        NameLabel.Font = Enum.Font.Gotham
        NameLabel.Text = stat.Text
        NameLabel.TextColor3 = self.Colors.Text
        NameLabel.TextSize = 18
        NameLabel.TextXAlignment = Enum.TextXAlignment.Left
        
        local ValueLabel = Instance.new("TextLabel")
        ValueLabel.Parent = StatFrame
        ValueLabel.BackgroundTransparency = 1
        ValueLabel.Position = UDim2.new(0.5, 0, 0, 0)
        ValueLabel.Size = UDim2.new(0.5, -15, 1, 0)
        ValueLabel.Font = Enum.Font.GothamBold
        ValueLabel.Text = tostring(stat.Value())
        ValueLabel.TextColor3 = self.Colors.Success
        ValueLabel.TextSize = 18
        ValueLabel.TextXAlignment = Enum.TextXAlignment.Right
        
        -- ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤‡∏ó‡∏∏‡∏Å 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        spawn(function()
            while StatFrame.Parent do
                ValueLabel.Text = tostring(stat.Value())
                wait(3)
            end
        end)
    end
end

-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì
-- ‚îÉ                      üåü DESKTOP ICON & UTILITIES üåü                        ‚îÉ
-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì

function UltimateGUI:CreateDesktopIcon()
    if PlayerGui:FindFirstChild("GrowGardenIcon") then
        PlayerGui.GrowGardenIcon:Destroy()
    end
    
    local IconGui = Instance.new("ScreenGui")
    IconGui.Name = "GrowGardenIcon"
    IconGui.Parent = PlayerGui
    IconGui.ResetOnSpawn = false
    
    local IconButton = Instance.new("ImageButton")
    IconButton.Name = "IconButton"
    IconButton.Parent = IconGui
    IconButton.BackgroundColor3 = self.Colors.Primary
    IconButton.BorderSizePixel = 0
    IconButton.Position = UDim2.new(0, 50, 0, 50)
    IconButton.Size = UDim2.new(0, 80, 0, 80)
    IconButton.Image = ""
    IconButton.Draggable = true
    
    local IconCorner = Instance.new("UICorner")
    IconCorner.CornerRadius = UDim.new(0, 16)
    IconCorner.Parent = IconButton
    
    local IconStroke = Instance.new("UIStroke")
    IconStroke.Color = self.Colors.Light
    IconStroke.Thickness = 3
    IconStroke.Parent = IconButton
    
    local IconLabel = Instance.new("TextLabel")
    IconLabel.Parent = IconButton
    IconLabel.BackgroundTransparency = 1
    IconLabel.Size = UDim2.new(1, 0, 1, 0)
    IconLabel.Font = Enum.Font.GothamBold
    IconLabel.Text = "üå±"
    IconLabel.TextColor3 = self.Colors.Light
    IconLabel.TextScaled = true
    
    local isMainGUIVisible = false
    
    IconButton.MouseButton1Click:Connect(function()
        if PlayerGui:FindFirstChild("GrowGardenUltimate") then
            PlayerGui.GrowGardenUltimate:Destroy()
            isMainGUIVisible = false
        else
            self:CreateMainGUI()
            isMainGUIVisible = true
        end
    end)
    
    -- Hover effects
    IconButton.MouseEnter:Connect(function()
        TweenService:Create(IconButton, TweenInfo.new(0.3), {
            Size = UDim2.new(0, 90, 0, 90),
            BackgroundColor3 = self.Colors.Secondary
        }):Play()
    end)
    
    IconButton.MouseLeave:Connect(function()
        TweenService:Create(IconButton, TweenInfo.new(0.3), {
            Size = UDim2.new(0, 80, 0, 80),
            BackgroundColor3 = self.Colors.Primary
        }):Play()
    end)
    
    return IconGui
end

function UltimateGUI:ShowNotification(text, color)
    if not self.Settings.ShowNotifications then return end
    
    local NotifGui = Instance.new("ScreenGui")
    NotifGui.Parent = PlayerGui
    NotifGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    local NotifFrame = Instance.new("Frame")
    NotifFrame.Parent = NotifGui
    NotifFrame.BackgroundColor3 = color or self.Colors.Primary
    NotifFrame.BorderSizePixel = 0
    NotifFrame.Position = UDim2.new(1, 0, 0, 100)
    NotifFrame.Size = UDim2.new(0, 300, 0, 60)
    
    local NotifCorner = Instance.new("UICorner")
    NotifCorner.CornerRadius = UDim.new(0, 12)
    NotifCorner.Parent = NotifFrame
    
    local NotifText = Instance.new("TextLabel")
    NotifText.Parent = NotifFrame
    NotifText.BackgroundTransparency = 1
    NotifText.Position = UDim2.new(0, 15, 0, 0)
    NotifText.Size = UDim2.new(1, -30, 1, 0)
    NotifText.Font = Enum.Font.Gotham
    NotifText.Text = text
    NotifText.TextColor3 = self.Colors.Light
    NotifText.TextSize = 14
    NotifText.TextWrapped = true
    NotifText.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Slide in
    TweenService:Create(NotifFrame, TweenInfo.new(0.5), {Position = UDim2.new(1, -310, 0, 100)}):Play()
    
    -- Slide out after 3 seconds
    spawn(function()
        wait(3)
        TweenService:Create(NotifFrame, TweenInfo.new(0.5), {Position = UDim2.new(1, 0, 0, 100)}):Play()
        wait(0.5)
        NotifGui:Destroy()
    end)
end

function UltimateGUI:SetupAntiAFK()
    if not self.Settings.AntiAFK then return end
    
    local VirtualUser = game:GetService("VirtualUser")
    
    LocalPlayer.Idled:Connect(function()
        if self.Settings.AntiAFK then
            VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
            VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
        end
    end)
    
    -- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢
    spawn(function()
        while self.Settings.AntiAFK do
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                LocalPlayer.Character.Humanoid:Move(Vector3.new(0.1, 0, 0))
                wait(0.1)
                LocalPlayer.Character.Humanoid:Move(Vector3.new(-0.1, 0, 0))
            end
            wait(300) -- ‡∏ó‡∏∏‡∏Å 5 ‡∏ô‡∏≤‡∏ó‡∏µ
        end
    end)
end

function UltimateGUI:SetupAutoReconnect()
    if not self.Settings.AutoReconnect then return end
    
    game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
        if child.Name == 'ErrorPrompt' and child:FindFirstChild('MessageArea') and child.MessageArea:FindFirstChild("ErrorFrame") then
            game:GetService('TeleportService'):Teleport(game.PlaceId, LocalPlayer)
        end
    end)
end

function UltimateGUI:FullScan()
    self:ScanRemoteEvents()
    self:ScanGameItems()
    self.GameData.LastScan = tick()
end

function UltimateGUI:ResetSettings()
    self.Settings = {
        AutoPlant = false,
        AutoHarvest = false,
        AutoSell = false,
        AutoWater = false,
        AutoBuySeeds = false,
        AutoBuyEggs = false,
        AutoBuyShops = false,
        AutoBuyTools = false,
        SelectedSeed = "Carrot",
        SelectedEgg = "Common Egg",
        BuyAmount = 1,
        FarmSpeed = 1.0,
        ScanInterval = 30,
        BuyInterval = 15,
        AntiAFK = true,
        AutoReconnect = true,
        SmartDetection = true,
        ShowNotifications = true,
        UIScale = 1.0,
        Theme = "Dark"
    }
end

-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì
-- ‚îÉ                          üöÄ MAIN EXECUTION LOOP üöÄ                         ‚îÉ
-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì

function UltimateGUI:StartMainLoop()
    self.GameData.Connections.MainLoop = RunService.Heartbeat:Connect(function()
        local currentTime = tick()
        
        -- ‡∏™‡πÅ‡∏Å‡∏ô‡∏ó‡∏∏‡∏Å 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        if self.Settings.SmartDetection and currentTime - self.GameData.LastScan > self.Settings.ScanInterval then
            self:FullScan()
        end
        
        -- ‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å 15 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        if currentTime - self.GameData.LastBuy > self.Settings.BuyInterval then
            if self.Settings.AutoBuySeeds and #self.GameData.Seeds > 0 then
                self:SafeBuy(self.GameData.Seeds[1].Name, "Seed", self.Settings.BuyAmount)
            end
            if self.Settings.AutoBuyEggs and #self.GameData.Eggs > 0 then
                self:SafeBuy(self.GameData.Eggs[1].Name, "Egg", self.Settings.BuyAmount)
            end
            self.GameData.LastBuy = currentTime
        end
        
        -- ‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
        if currentTime - self.GameData.LastFarm > self.Settings.FarmSpeed then
            if self.Settings.AutoPlant then
                self:AutoPlant()
            end
            if self.Settings.AutoHarvest then
                self:AutoHarvest()
            end
            if self.Settings.AutoSell then
                self:AutoSell()
            end
            self.GameData.LastFarm = currentTime
        end
    end)
end

-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì
-- ‚îÉ                            üéâ INITIALIZATION üéâ                            ‚îÉ
-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì

function UltimateGUI:Initialize()
    print("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ")
    print("üå± GROW A GARDEN - ULTIMATE SCRIPT üå±")
    print("‚ú® ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡∏î‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô")
    print("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ")
    
    -- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ
    print("üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πÅ‡∏Å‡∏ô‡πÄ‡∏Å‡∏°...")
    self:FullScan()
    
    print("üö´ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Anti-AFK...")
    self:SetupAntiAFK()
    
    print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Auto-Reconnect...")
    self:SetupAutoReconnect()
    
    print("üé® ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á UI...")
    self:CreateDesktopIcon()
    
    print("üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô Main Loop...")
    self:StartMainLoop()
    
    -- ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    print("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ")
    print("üìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏™‡πÅ‡∏Å‡∏ô:")
    print("üîå RemoteEvents:", self:CountTable(self.GameData.RemoteEvents))
    print("üå± ‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå:", #self.GameData.Seeds)
    print("ü•ö ‡πÑ‡∏Ç‡πà:", #self.GameData.Eggs)
    print("üè™ ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤:", #self.GameData.Shops)
    print("üîß ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠:", #self.GameData.Tools)
    print("üåø ‡∏û‡∏∑‡∏ä:", #self.GameData.Plants)
    print("üë• NPCs:", #self.GameData.NPCs)
    print("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ")
    print("‚úÖ ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô! ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô üå± ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î GUI")
    print("üéØ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå: ‡∏õ‡∏•‡∏π‡∏Å, ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß, ‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á, Anti-AFK, ‡πÅ‡∏•‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏≠‡∏µ‡∏Å‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢!")
    print("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ")
    
    -- ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏ô‡πÄ‡∏Å‡∏°
    self:ShowNotification("üå± Grow Garden Ultimate Script ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", self.Colors.Success)
    
    -- Global commands
    _G.GrowGarden = {
        EnableAll = function()
            self.Settings.AutoPlant = true
            self.Settings.AutoHarvest = true
            self.Settings.AutoSell = true
            self.Settings.AutoBuySeeds = true
            self.Settings.AutoBuyEggs = true
            self:ShowNotification("üåü ‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß!", self.Colors.Success)
        end,
        DisableAll = function()
            self.Settings.AutoPlant = false
            self.Settings.AutoHarvest = false
            self.Settings.AutoSell = false
            self.Settings.AutoBuySeeds = false
            self.Settings.AutoBuyEggs = false
            self:ShowNotification("üõë ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß!", self.Colors.Danger)
        end,
        Rescan = function()
            self:FullScan()
            self:ShowNotification("üîç ‡∏™‡πÅ‡∏Å‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!", self.Colors.Secondary)
        end,
        ShowGUI = function()
            if not PlayerGui:FindFirstChild("GrowGardenUltimate") then
                self:CreateMainGUI()
            end
        end,
        HideGUI = function()
            if PlayerGui:FindFirstChild("GrowGardenUltimate") then
                PlayerGui.GrowGardenUltimate:Destroy()
            end
        end,
        CheckMoney = function()
            local money = self:GetPlayerMoney()
            print("üí∞ ‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:", money)
            self:ShowNotification("üí∞ ‡πÄ‡∏á‡∏¥‡∏ô: " .. money, self.Colors.Warning)
        end
    }
    
    print("üí° ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©:")
    print("   _G.GrowGarden.EnableAll() - ‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
    print("   _G.GrowGarden.DisableAll() - ‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
    print("   _G.GrowGarden.Rescan() - ‡∏™‡πÅ‡∏Å‡∏ô‡πÉ‡∏´‡∏°‡πà")
    print("   _G.GrowGarden.CheckMoney() - ‡∏î‡∏π‡πÄ‡∏á‡∏¥‡∏ô")
end

-- ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ
UltimateGUI:Initialize()

-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì
-- ‚îÉ                             üåü THE END üåü                                   ‚îÉ
-- ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì

return UltimateGUI
